// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace HarneyCounty.Infrastructure.Core.Mappings
{
    using HarneyCounty.Domain.Core.Models;

    public class EmployeeMasterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EmployeeMaster>
    {
        public EmployeeMasterConfiguration()
            : this("dbo")
        {
        }

        public EmployeeMasterConfiguration(string schema)
        {
            Property(x => x.EmployeeNumber).HasPrecision(5,0);
            Property(x => x.LastName).IsFixedLength().IsUnicode(false);
            Property(x => x.FirstName).IsFixedLength().IsUnicode(false);
            Property(x => x.MiddleInitial).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.EmployeeAddress1).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.EmployeeAddress2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ZipCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.EmployeePosition).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.EmployeeSocSecurity).IsOptional().HasPrecision(9,0);
            Property(x => x.UnionSts).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ElectedOfficialSts).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.EmployeePhone).IsOptional().HasPrecision(10,0);
            Property(x => x.HireDate).IsOptional();
            Property(x => x.TerminationDate).IsOptional();
            Property(x => x.RehireDate).IsOptional();
            Property(x => x.BirthDate).IsOptional();
            Property(x => x.AnnivDate).IsOptional();
            Property(x => x.MiscVacDate).IsOptional();
            Property(x => x.VacationSchedule).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Sex).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SalariedHourly).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PartTimeSts).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.DefaultPayRate).IsOptional().HasPrecision(7,2);
            Property(x => x.SalariedHourlyRate).IsOptional().HasPrecision(6,2);
            Property(x => x.MaritalSts).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Exemptions).IsOptional().HasPrecision(2,0);
            Property(x => x.ExemptionsState).IsOptional().HasPrecision(2,0);
            Property(x => x.EmployeeSocSecLimit).IsOptional().HasPrecision(7,2);
            Property(x => x.EmployeeMedicareLimit).IsOptional().HasPrecision(7,2);
            Property(x => x.Pers).IsOptional().HasPrecision(6,0);
            Property(x => x.AutoPayrollSts).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Retirement).IsOptional().HasPrecision(10,0);
            Property(x => x.RegularDayHours).IsOptional().HasPrecision(4,2);
            Property(x => x.ActiveDeleteTermSts).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.EmployeeRange).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.EmployeeStep).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.EmployeeLevel1).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.EditCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.EmploymentTypeW2Status).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.W2Sequence).IsOptional().HasPrecision(2,0);
            Property(x => x.SaifYear).IsOptional().HasPrecision(4,0);
            Property(x => x.SaifCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Fund).IsOptional().HasPrecision(3,0);
            Property(x => x.Department).IsOptional().HasPrecision(3,0);
            Property(x => x.AccountNumberType).IsOptional().HasPrecision(1,0);
            Property(x => x.AccountNumberClass).IsOptional().HasPrecision(2,0);
            Property(x => x.AccountNumberItem).IsOptional().HasPrecision(4,0);
            Property(x => x.DefaultOtBudgetNumberFund).IsOptional().HasPrecision(3,0);
            Property(x => x.DefaultOtBudgetNumberOrganization).IsOptional().HasPrecision(3,0);
            Property(x => x.DefaultOtBudgetNumberAccountType).IsOptional().HasPrecision(1,0);
            Property(x => x.DefaultOtBudgetNumberAccountClass).IsOptional().HasPrecision(2,0);
            Property(x => x.DefaultOtBudgetNumberAccountItem).IsOptional().HasPrecision(4,0);
            Property(x => x.FedTaxTableType).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PersStsCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.HealthInsurStsCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.VacationAccrualBal).IsOptional().HasPrecision(7,2);
            Property(x => x.PriorVacationBal).IsOptional().HasPrecision(7,2);
            Property(x => x.VacationBalanceUseLose).IsOptional().HasPrecision(7,2);
            Property(x => x.HolidayHoursBanked).IsOptional().HasPrecision(7,2);
            Property(x => x.SickAccrualBal).IsOptional().HasPrecision(7,2);
            Property(x => x.CompAccrualBal).IsOptional().HasPrecision(7,2);
            Property(x => x.WeeksWorked).IsOptional().HasPrecision(2,0);
            Property(x => x.FloatingHolidayBal).IsOptional().HasPrecision(7,2);
            Property(x => x.SickAccrualRate).IsOptional().HasPrecision(9,7);
            Property(x => x.VacationAccrualRate).IsOptional().HasPrecision(9,7);
            Property(x => x.DirectDepositStatus).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

}
// </auto-generated>
