// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace HarneyCounty.Infrastructure.Core.Mappings
{
    using HarneyCounty.Domain.Core.Models;

    public class LandAssessmentMsavConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LandAssessmentMsav>
    {
        public LandAssessmentMsavConfiguration()
            : this("dbo")
        {
        }

        public LandAssessmentMsavConfiguration(string schema)
        {
            Property(x => x.AsmtYear).HasPrecision(4,0);
            Property(x => x.AcctNmbr).IsFixedLength().IsUnicode(false);
            Property(x => x.LandApprSeq).HasPrecision(5,0);
            Property(x => x.LandApprSize1).IsOptional().HasPrecision(9,3);
            Property(x => x.LandApprSize2).IsOptional().HasPrecision(9,3);
            Property(x => x.MsavBaseLandValue).IsOptional().HasPrecision(8,2);
            Property(x => x.MsavCurrentLandValue).IsOptional().HasPrecision(8,2);
            Property(x => x.CostPerUnit).IsOptional().HasPrecision(9,2);
            Property(x => x.LumpSumValue).IsOptional().HasPrecision(7,0);
            Property(x => x.LandApprAssessValue).IsOptional().HasPrecision(7,0);
            Property(x => x.NoTrendFlag).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.LandCalcMthd).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ExemFlag).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.LandTypeFarmNonFarm).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.MsavLandValue).IsOptional().HasPrecision(7,0);
            Property(x => x.M50LandValue).IsOptional().HasPrecision(7,0);
            Property(x => x.ValAreaCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.LandType).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.LandClassCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PropClassCode).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

}
// </auto-generated>
