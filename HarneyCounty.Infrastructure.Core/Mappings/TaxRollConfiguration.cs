// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace HarneyCounty.Infrastructure.Core.Mappings
{
    using HarneyCounty.Domain.Core.Models;

    public class TaxRollConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TaxRoll>
    {
        public TaxRollConfiguration()
            : this("dbo")
        {
        }

        public TaxRollConfiguration(string schema)
        {
            Property(x => x.AcctNmbr).IsFixedLength().IsUnicode(false);
            Property(x => x.TaxRollYear).HasPrecision(4,0);
            Property(x => x.TaxRollAdvalorem).IsOptional().HasPrecision(9,2);
            Property(x => x.TaxRollPaid).IsOptional().HasPrecision(9,2);
            Property(x => x.TaxRollNav).IsOptional().HasPrecision(9,0);
            Property(x => x.TaxRollRealMktValue).IsOptional().HasPrecision(9,0);
            Property(x => x.TaxRollStatePay).IsOptional().HasPrecision(7,2);
            Property(x => x.TaxRollMobileAt).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TaxRollRollType).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TaxRollCodeArea).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TaxRollSpecAmount).IsOptional().HasPrecision(8,2);
            Property(x => x.TaxRollOpenBal).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TaxRollSpecSw).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TaxRollWarFlg).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TaxRollPenalty).IsOptional().HasPrecision(9,2);
            Property(x => x.TaxRollFil21).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TaxRollNavNew).IsOptional().HasPrecision(9,0);
            Property(x => x.TaxRollRmvNew).IsOptional().HasPrecision(9,0);
        }
    }

}
// </auto-generated>
