// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace HarneyCounty.Infrastructure.Core.Mappings
{
    using HarneyCounty.Domain.Core.Models;

    public class DeductionMasterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeductionMaster>
    {
        public DeductionMasterConfiguration()
            : this("dbo")
        {
        }

        public DeductionMasterConfiguration(string schema)
        {
            Property(x => x.DeductionCode).IsFixedLength().IsUnicode(false);
            Property(x => x.DeductionDesc).IsFixedLength().IsUnicode(false);
            Property(x => x.ExpenseAcct).IsOptional().HasPrecision(7,0);
            Property(x => x.ApAcct).IsOptional().HasPrecision(7,0);
            Property(x => x.EmployerPercent).IsOptional().HasPrecision(5,4);
            Property(x => x.EmployerAmt).IsOptional().HasPrecision(7,2);
            Property(x => x.PayPeriodSts).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ApCreated).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.QuarterlySts).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CountyPaysEmployeeShar).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ElectronicTransfer).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.NormalDeduction).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ActiveInactiveStatus).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.VendorTypeStatus).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.VendorNumber).IsOptional().HasPrecision(5,0);
        }
    }

}
// </auto-generated>
