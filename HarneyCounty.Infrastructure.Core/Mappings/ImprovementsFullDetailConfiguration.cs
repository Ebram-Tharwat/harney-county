// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace HarneyCounty.Infrastructure.Core.Mappings
{
    using HarneyCounty.Domain.Core.Models;

    public class ImprovementsFullDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ImprovementsFullDetail>
    {
        public ImprovementsFullDetailConfiguration()
            : this("dbo")
        {
        }

        public ImprovementsFullDetailConfiguration(string schema)
        {
            Property(x => x.AsmtYear).HasPrecision(4,0);
            Property(x => x.AcctNmbr).IsFixedLength().IsUnicode(false);
            Property(x => x.Seq).HasPrecision(2,0);
            Property(x => x.YearBuilt).IsOptional().HasPrecision(4,0);
            Property(x => x.PrctGood).IsOptional().HasPrecision(3,2);
            Property(x => x.YearAppraised).IsOptional().HasPrecision(4,0);
            Property(x => x.PrimaryIndicator).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ImprovemNoTrendFlag).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ImprvMrktValue).IsOptional().HasPrecision(9,0);
            Property(x => x.ImprvAssessValue).IsOptional().HasPrecision(9,0);
            Property(x => x.ActInactiveSts).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ExemFlag).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SqFeet).IsOptional().HasPrecision(5,0);
            Property(x => x.FctrBookCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PropClassCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ApprsrCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.HomesteadFlag).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.FactorBookMasterId).IsOptional();
            Property(x => x.FactorBookDescr).IsOptional().IsFixedLength().IsUnicode(false);
        }
    }

}
// </auto-generated>
