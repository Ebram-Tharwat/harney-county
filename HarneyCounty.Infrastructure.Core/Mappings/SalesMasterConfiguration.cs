// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace HarneyCounty.Infrastructure.Core.Mappings
{
    using HarneyCounty.Domain.Core.Models;

    public class SalesMasterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SalesMaster>
    {
        public SalesMasterConfiguration()
            : this("dbo")
        {
        }

        public SalesMasterConfiguration(string schema)
        {
            Property(x => x.SaleIdentification).IsFixedLength().IsUnicode(false);
            Property(x => x.FactorBookDigit1).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.FactorBookDigit2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.FactorBookDigit3).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.FactorBookDigit4).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PropClassDigit1).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PropClassDigit2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PropClassDigit3).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PropClassDigit4).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RecordedSalesPrice).IsOptional().HasPrecision(9,0);
            Property(x => x.ConfirmedSalesPrice).IsOptional().HasPrecision(9,0);
            Property(x => x.ChattelAmount).IsOptional().HasPrecision(8,0);
            Property(x => x.NetSalesPrice).IsOptional().HasPrecision(9,0);
            Property(x => x.SaleRatio).IsOptional().HasPrecision(5,2);
            Property(x => x.BuyerName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.BuyerAddress1).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.BuyerAddress2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SellerAddress1).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SellerAddress2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SellerName).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ConfirmationStatus).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Ref).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.InterestRate).IsOptional().HasPrecision(6,4);
            Property(x => x.DownPaymentAmount).IsOptional().HasPrecision(7,0);
            Property(x => x.DurationOfFinancing).IsOptional().HasPrecision(3,0);
            Property(x => x.SaleLandValue).IsOptional().HasPrecision(9,0);
            Property(x => x.SaleImprovementValue).IsOptional().HasPrecision(9,0);
            Property(x => x.SaleMobHomeValue).IsOptional().HasPrecision(9,0);
            Property(x => x.TotalAssessedValue).IsOptional().HasPrecision(9,0);
            Property(x => x.TotalAcres).IsOptional().HasPrecision(9,3);
            Property(x => x.DateOfConfirmation).IsOptional();
            Property(x => x.YearAppraised).IsOptional().HasPrecision(4,0);
            Property(x => x.CountyNumber).IsOptional().HasPrecision(2,0);
            Property(x => x.PercentGood).IsOptional().HasPrecision(3,2);
            Property(x => x.YearBuilt).IsOptional().HasPrecision(4,0);
            Property(x => x.AssessmentYear).IsOptional().HasPrecision(4,0);
            Property(x => x.SaleDate).IsOptional();
            Property(x => x.MultiAccountFlag).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SalesLetterStatus).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.AreaSquareLinealFeety).IsOptional().HasPrecision(5,0);
            Property(x => x.Class).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.MobileHomeManufacturer).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.MobileHomeSize).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.NumberBedrooms).IsOptional().HasPrecision(2,0);
            Property(x => x.NumberBaths).IsOptional().HasPrecision(2,1);
            Property(x => x.NumberFloors).IsOptional().HasPrecision(1,0);
            Property(x => x.AtticBasementBoth).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SaleCenturyYearMonth).IsOptional().HasPrecision(5,0);
            Property(x => x.ConditionCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SecondaryVerificationCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.FinancingCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.InstrumentCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.BuyerZipCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SellerZipCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.AppraiserCode1).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ValueAreaCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CodeAreaCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.AppraiserCode2).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.AsmtYear).IsOptional().HasPrecision(4,0);
            Property(x => x.MaintenanceAreaCode).IsOptional().HasPrecision(2,0);
            Property(x => x.ZoningCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PropertyClassCode).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Twnshp).IsOptional().HasPrecision(2,0);
            Property(x => x.TwnshpDir).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Range).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.RangDir).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Sctn).IsOptional().HasPrecision(2,0);
            Property(x => x.QtrSctn).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.Prcl).IsOptional().HasPrecision(5,0);
            Property(x => x.SpecIntAlph).IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SpecIntNmbr).IsOptional().HasPrecision(2,0);
        }
    }

}
// </auto-generated>
