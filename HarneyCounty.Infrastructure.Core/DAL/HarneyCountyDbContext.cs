

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "HarneyCounty.Web\Web.config"
//     Connection String Name: "HarneyCountyDbContext"
//     Connection String:      "Data Source=.;Initial Catalog=HarneyCounty;Integrated Security=True;"
// ------------------------------------------------------------------------------------------------
// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace HarneyCounty.Infrastructure.Core.DAL
{
    using HarneyCounty.Domain.Core.Models;
    using HarneyCounty.Infrastructure.Core.Mappings;

    #region Database context

    public class HarneyCountyDbContext : System.Data.Entity.DbContext
    {
        public System.Data.Entity.DbSet<AccountLegalComment> AccountLegalComments { get; set; }
        public System.Data.Entity.DbSet<AccountMaster> AccountMasters { get; set; }
        public System.Data.Entity.DbSet<AccountMasterWithAccountSummaryView> AccountMasterWithAccountSummaryViews { get; set; }
        public System.Data.Entity.DbSet<AccountSummary> AccountSummaries { get; set; }
        public System.Data.Entity.DbSet<ChangeFile> ChangeFiles { get; set; }
        public System.Data.Entity.DbSet<CodeArea> CodeAreas { get; set; }
        public System.Data.Entity.DbSet<Improvement> Improvements { get; set; }
        public System.Data.Entity.DbSet<LandAprsPropCharItem> LandAprsPropCharItems { get; set; }
        public System.Data.Entity.DbSet<MobileHome> MobileHomes { get; set; }
        public System.Data.Entity.DbSet<PropertyClass> PropertyClasses { get; set; }
        public System.Data.Entity.DbSet<SearchFile> SearchFiles { get; set; }
        public System.Data.Entity.DbSet<ZipCodeFile> ZipCodeFiles { get; set; }

        static HarneyCountyDbContext()
        {
            System.Data.Entity.Database.SetInitializer<HarneyCountyDbContext>(null);
        }

        public HarneyCountyDbContext()
            : base("Name=HarneyCountyDbContext")
        {
        }

        public HarneyCountyDbContext(string connectionString)
            : base(connectionString)
        {
        }

        public HarneyCountyDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public HarneyCountyDbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public HarneyCountyDbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AccountLegalCommentConfiguration());
            modelBuilder.Configurations.Add(new AccountMasterConfiguration());
            modelBuilder.Configurations.Add(new AccountMasterWithAccountSummaryViewConfiguration());
            modelBuilder.Configurations.Add(new AccountSummaryConfiguration());
            modelBuilder.Configurations.Add(new ChangeFileConfiguration());
            modelBuilder.Configurations.Add(new CodeAreaConfiguration());
            modelBuilder.Configurations.Add(new ImprovementConfiguration());
            modelBuilder.Configurations.Add(new LandAprsPropCharItemConfiguration());
            modelBuilder.Configurations.Add(new MobileHomeConfiguration());
            modelBuilder.Configurations.Add(new PropertyClassConfiguration());
            modelBuilder.Configurations.Add(new SearchFileConfiguration());
            modelBuilder.Configurations.Add(new ZipCodeFileConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AccountLegalCommentConfiguration(schema));
            modelBuilder.Configurations.Add(new AccountMasterConfiguration(schema));
            modelBuilder.Configurations.Add(new AccountMasterWithAccountSummaryViewConfiguration(schema));
            modelBuilder.Configurations.Add(new AccountSummaryConfiguration(schema));
            modelBuilder.Configurations.Add(new ChangeFileConfiguration(schema));
            modelBuilder.Configurations.Add(new CodeAreaConfiguration(schema));
            modelBuilder.Configurations.Add(new ImprovementConfiguration(schema));
            modelBuilder.Configurations.Add(new LandAprsPropCharItemConfiguration(schema));
            modelBuilder.Configurations.Add(new MobileHomeConfiguration(schema));
            modelBuilder.Configurations.Add(new PropertyClassConfiguration(schema));
            modelBuilder.Configurations.Add(new SearchFileConfiguration(schema));
            modelBuilder.Configurations.Add(new ZipCodeFileConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

}
// </auto-generated>

