@model IEnumerable<HarneyCounty.Application.Core.ViewModel.Audit.FiscalYearBeginningBalanceViewModel>

@{
    ViewBag.Title = "Fiscal Year Beginning Balance";
}

<h2>Fiscal Year Beginning Balances</h2>

<div class="row col-md-12 pad-bottom-15">
    @Html.ActionLink("Create New", "Create") |
    @using (Html.BeginForm("PopulateAllYearsBeginningBalances", "FiscalYearBeginningBalance", new { fiscalYearId = ViewBag.FiscalYearId }, FormMethod.Post, new { @class = "inline" }))
    {
        <button type="submit" class="btn btn-success">Populate all years</button>
    }

    @if (Model.Any())
    {
        <div class="row">
            <div class="dropdown pull-right">
                <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown">
                    <i class="glyphicon glyphicon-download-alt"></i>&nbsp;&nbsp;Export
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu">
                    <li><a class="" target="_blank" href="@Url.Action("ExportBeginingBalancesTemplateAsExcel", "FiscalYearBeginningBalance")">Export To Excel</a></li>
                    <li><a class="" target="_blank" href="@Url.Action("ExportBeginingBalancesTemplateAsPdf", "FiscalYearBeginningBalance")">Export To PDF</a></li>
                </ul>
            </div>
        </div>
    }
</div>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Year)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BeginningBalance)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.YtdCollections)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.YtdLosses)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.YtdGains)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.YtdBalance)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr data-id="@item.Id">
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BeginningBalance)
            </td>
            <td class="YtdCollections">
                @Html.DisplayFor(modelItem => item.YtdCollections)
            </td>
            <td class="YtdLosses">
                @Html.DisplayFor(modelItem => item.YtdLosses)
            </td>
            <td class="YtdGains">
                @Html.DisplayFor(modelItem => item.YtdGains)
            </td>
            <td class="YtdBalance">
                @Html.DisplayFor(modelItem => item.YtdBalance)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
                <button type="submit" class="btn btn-success btnRepopulate" data-url="@Url.Action("RepopulateBeginningBalance", "FiscalYearBeginningBalance", new { id = item.Id})">Repopulate</button>
            </td>
        </tr>
    }
    <tr class="bold">
        <td></td>
        <td>@Model.Sum(t => t.BeginningBalance)</td>
        <td>@Model.Sum(t => t.YtdCollections)</td>
        <td>@Model.Sum(t => t.YtdLosses)</td>
        <td>@Model.Sum(t => t.YtdGains)</td>
        <td>@Model.Sum(t => t.YtdBalance)</td>
        <td></td>
    </tr>
</table>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jQueryPlugins")
    <script type="text/javascript">
        $(function () {
            $('.btnRepopulate').click(function (event) {
                event.preventDefault();
                $.LoadingOverlay("show");
                var url = $(this).data('url');
                $.post(url, function (data) {
                    $tr = $('tr[data-id="' + data.Id + '"]');
                    $('td.YtdCollections', $tr).text(data.YtdCollections);
                    $('td.YtdLosses', $tr).text(data.YtdLosses);
                    $('td.YtdGains', $tr).text(data.YtdGains);
                    $('td.YtdBalance', $tr).text(data.YtdBalance);
                    $tr.animate({ backgroundColor: "#ffffcc" }, 1).animate({ backgroundColor: "#ffffff" }, 2000);
                })
                    .always(function () { $.LoadingOverlay("hide"); });
            });
        });
    </script>
}