@using X.PagedList
@using X.PagedList.Mvc
@using HarneyCounty.Web.ViewModel;
@using HarneyCounty.Application.Core.Contracts;
@model IEnumerable<HarneyCounty.Web.ViewModel.Data>

@{
    ViewBag.Title = "Search";
    var filterViewModel = ViewBag.FilterViewModel as SearchCriteria;
}

<h2>Search</h2>

<div>
    @using (Html.BeginForm("Index", "Home", FormMethod.Get))
    {
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true)
            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.AccountNumber)
                    @Html.ValidationMessageFor(model =>filterViewModel.AccountNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.Year)
                    @Html.ValidationMessageFor(model => filterViewModel.AccountNumber, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.OwnerName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.OwnerName)
                    @Html.ValidationMessageFor(model=>filterViewModel.OwnerName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.SitusNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.SitusNumber)
                    @Html.ValidationMessageFor(model => filterViewModel.SitusNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.SitusNumberSuffix, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.SitusNumberSuffix)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.SitusDirectory, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.SitusDirectory)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.SitusZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.SitusZipCode)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.SubDivCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.SubDivCode)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.LotNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.LotNumber)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.BlockNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.BlockNumber)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.XNmbr, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.XNmbr)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.MobileHomeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.MobileHomeId)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.MobHomeMnfr, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.MobHomeMnfr)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.MHSerial, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.MHSerial)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.CodeArea, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.CodeArea)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.PropertyClass, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.PropertyClass)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Filter" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.AccountNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OwnerName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Flg)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Prop)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Code)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rl)
        </th>
        <th></th>
    </tr>

    @if (Model != null && Model.Any())
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AccountNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OwnerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Flg)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Prop)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rl)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.AccountNumber }) |
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td colspan="5">
                <h4>
                    <span class="label label-info">No data match the search criteria!</span>
                </h4>
            </td>
        </tr>
    }
</table>
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new
{
    page,
    option = Request.QueryString["option"],
    search = Request.QueryString["search"]
}))

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
