// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace HarneyCounty.Domain.Core.Models
{

    [Table("OwnershipHistory", Schema = "dbo")]
    public class OwnershipHistory
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ID", Order = 1, TypeName = "int")]
        [Index(@"PK__Ownershi__3214EC276754599E", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; }

        [Column(@"AsmtYear", Order = 2, TypeName = "decimal")]
        [Required]
        [Display(Name = "Asmt year")]
        public decimal AsmtYear { get; set; }

        [Column(@"AcctNmbr", Order = 3, TypeName = "char")]
        [Required]
        [MaxLength(9)]
        [StringLength(9)]
        [Display(Name = "Acct nmbr")]
        public string AcctNmbr { get; set; }

        [Column(@"Sequence5", Order = 4, TypeName = "decimal")]
        [Required]
        [Display(Name = "Sequence 5")]
        public decimal Sequence5 { get; set; }

        [Column(@"OwnerName", Order = 5, TypeName = "char")]
        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "Owner name")]
        public string OwnerName { get; set; }

        [Column(@"CareOfFlag", Order = 6, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Care of flag")]
        public string CareOfFlag { get; set; }

        [Column(@"CareOfName", Order = 7, TypeName = "char")]
        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "Care of name")]
        public string CareOfName { get; set; }

        [Column(@"Ref", Order = 8, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Ref")]
        public string Ref { get; set; }

        [Column(@"SaleDate", Order = 9, TypeName = "date")]
        [Display(Name = "Sale date")]
        public System.DateTime? SaleDate { get; set; }

        [Column(@"InstrumentCode", Order = 10, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Instrument code")]
        public string InstrumentCode { get; set; }

        [Column(@"OwnerHstryComment", Order = 11, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Owner hstry comment")]
        public string OwnerHstryComment { get; set; }

        [Column(@"RefAcres", Order = 12, TypeName = "decimal")]
        [Display(Name = "Ref acres")]
        public decimal? RefAcres { get; set; }

        [Column(@"Jv", Order = 13, TypeName = "decimal")]
        [Display(Name = "Jv")]
        public decimal? Jv { get; set; }
    }

}
// </auto-generated>
