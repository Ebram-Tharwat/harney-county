// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace HarneyCounty.Domain.Core.Models
{

    [Table("DisplayUtilityAccountsDetails", Schema = "dbo")]
    public class DisplayUtilityAccountsDetail
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"AsmtYear", Order = 1, TypeName = "decimal")]
        [Required]
        [Key]
        [Display(Name = "Asmt year")]
        public decimal AsmtYear { get; set; }

        [Column(@"AcctNmbrParent", Order = 2, TypeName = "char")]
        [MaxLength(9)]
        [StringLength(9)]
        [Display(Name = "Acct nmbr parent")]
        public string AcctNmbrParent { get; set; }

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ID", Order = 3, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; }

        [Column(@"OwnerName", Order = 4, TypeName = "char")]
        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "Owner name")]
        public string OwnerName { get; set; }

        [Column(@"CareOfFlag", Order = 5, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Care of flag")]
        public string CareOfFlag { get; set; }

        [Column(@"CareOfName", Order = 6, TypeName = "char")]
        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "Care of name")]
        public string CareOfName { get; set; }

        [Column(@"Twnshp", Order = 7, TypeName = "numeric")]
        [Display(Name = "Twnshp")]
        public decimal? Twnshp { get; set; }

        [Column(@"TwnshpDir", Order = 8, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Twnshp dir")]
        public string TwnshpDir { get; set; }

        [Column(@"Range", Order = 9, TypeName = "char")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Range")]
        public string Range { get; set; }

        [Column(@"RangDir", Order = 10, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Rang dir")]
        public string RangDir { get; set; }

        [Column(@"Sctn", Order = 11, TypeName = "decimal")]
        [Display(Name = "Sctn")]
        public decimal? Sctn { get; set; }

        [Column(@"QtrSctn", Order = 12, TypeName = "char")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "Qtr sctn")]
        public string QtrSctn { get; set; }

        [Column(@"Prcl", Order = 13, TypeName = "numeric")]
        [Display(Name = "Prcl")]
        public decimal? Prcl { get; set; }

        [Column(@"SpecIntAlph", Order = 14, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Spec int alph")]
        public string SpecIntAlph { get; set; }

        [Column(@"SpecIntNmbr", Order = 15, TypeName = "numeric")]
        [Display(Name = "Spec int nmbr")]
        public decimal? SpecIntNmbr { get; set; }

        [Column(@"OwnerAdrsNameLine1", Order = 16, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Owner adrs name line 1")]
        public string OwnerAdrsNameLine1 { get; set; }

        [Column(@"OwnerAdrsLine2", Order = 17, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Owner adrs line 2")]
        public string OwnerAdrsLine2 { get; set; }

        [Column(@"OwnerAdrsLine3", Order = 18, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Owner adrs line 3")]
        public string OwnerAdrsLine3 { get; set; }

        [Column(@"CodeAreaCode", Order = 19, TypeName = "char")]
        [MaxLength(6)]
        [StringLength(6)]
        [Display(Name = "Code area code")]
        public string CodeAreaCode { get; set; }

        [Column(@"PropClassCode", Order = 20, TypeName = "char")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Prop class code")]
        public string PropClassCode { get; set; }

        [Column(@"ZipCode", Order = 21, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Zip code")]
        public string ZipCode { get; set; }

        [Column(@"UnitsForAccount", Order = 22, TypeName = "decimal")]
        [Display(Name = "Units for account")]
        public decimal? UnitsForAccount { get; set; }

        [Column(@"UtilUnitAssessVal", Order = 23, TypeName = "decimal")]
        [Display(Name = "Util unit assess val")]
        public decimal? UtilUnitAssessVal { get; set; }

        [Column(@"UtilOtherAssessVal", Order = 24, TypeName = "decimal")]
        [Display(Name = "Util other assess val")]
        public decimal? UtilOtherAssessVal { get; set; }

        [Column(@"AcctMrktLandTotl", Order = 25, TypeName = "decimal")]
        [Display(Name = "Acct mrkt land totl")]
        public decimal? AcctMrktLandTotl { get; set; }

        [Column(@"AcctImprMrktValTotl", Order = 26, TypeName = "decimal")]
        [Display(Name = "Acct impr mrkt val totl")]
        public decimal? AcctImprMrktValTotl { get; set; }

        [Column(@"TotalExceptions", Order = 27, TypeName = "numeric")]
        [Display(Name = "Total exceptions")]
        public decimal? TotalExceptions { get; set; }

        [Column(@"AcctExmpTotal", Order = 28, TypeName = "decimal")]
        [Display(Name = "Acct exmp total")]
        public decimal? AcctExmpTotal { get; set; }

        [Column(@"MaximumAssessedValue", Order = 29, TypeName = "numeric")]
        [Display(Name = "Maximum assessed value")]
        public decimal? MaximumAssessedValue { get; set; }

        [Column(@"TaxableAssessedValue", Order = 30, TypeName = "numeric")]
        [Display(Name = "Taxable assessed value")]
        public decimal? TaxableAssessedValue { get; set; }

        [Column(@"AcctSpecAses", Order = 31, TypeName = "decimal")]
        [Display(Name = "Acct spec ases")]
        public decimal? AcctSpecAses { get; set; }
    }

}
// </auto-generated>
