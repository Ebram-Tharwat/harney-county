// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace HarneyCounty.Domain.Core.Models
{

    [Table("DeductionMaster", Schema = "dbo")]
    public class DeductionMaster
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ID", Order = 1, TypeName = "int")]
        [Index(@"PK__Deductio__3214EC275F7E2DAC", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; }

        [Column(@"DeductionCode", Order = 2, TypeName = "char")]
        [Required]
        [MaxLength(6)]
        [StringLength(6)]
        [Display(Name = "Deduction code")]
        public string DeductionCode { get; set; }

        [Column(@"DeductionDesc", Order = 3, TypeName = "char")]
        [Required]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Deduction desc")]
        public string DeductionDesc { get; set; }

        [Column(@"ExpenseAcct", Order = 4, TypeName = "decimal")]
        [Display(Name = "Expense acct")]
        public decimal? ExpenseAcct { get; set; }

        [Column(@"ApAcct", Order = 5, TypeName = "decimal")]
        [Display(Name = "Ap acct")]
        public decimal? ApAcct { get; set; }

        [Column(@"EmployerPercent", Order = 6, TypeName = "decimal")]
        [Display(Name = "Employer percent")]
        public decimal? EmployerPercent { get; set; }

        [Column(@"EmployerAmt", Order = 7, TypeName = "decimal")]
        [Display(Name = "Employer amt")]
        public decimal? EmployerAmt { get; set; }

        [Column(@"PayPeriodSts", Order = 8, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Pay period sts")]
        public string PayPeriodSts { get; set; }

        [Column(@"ApCreated", Order = 9, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Ap created")]
        public string ApCreated { get; set; }

        [Column(@"QuarterlySts", Order = 10, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Quarterly sts")]
        public string QuarterlySts { get; set; }

        [Column(@"CountyPaysEmployeeShar", Order = 11, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "County pays employee shar")]
        public string CountyPaysEmployeeShar { get; set; }

        [Column(@"ElectronicTransfer", Order = 12, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Electronic transfer")]
        public string ElectronicTransfer { get; set; }

        [Column(@"NormalDeduction", Order = 13, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Normal deduction")]
        public string NormalDeduction { get; set; }

        [Column(@"ActiveInactiveStatus", Order = 14, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Active inactive status")]
        public string ActiveInactiveStatus { get; set; }

        [Column(@"VendorTypeStatus", Order = 15, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Vendor type status")]
        public string VendorTypeStatus { get; set; }

        [Column(@"VendorNumber", Order = 16, TypeName = "decimal")]
        [Display(Name = "Vendor number")]
        public decimal? VendorNumber { get; set; }
    }

}
// </auto-generated>
