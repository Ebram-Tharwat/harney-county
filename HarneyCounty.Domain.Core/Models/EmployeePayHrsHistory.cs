// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace HarneyCounty.Domain.Core.Models
{

    [Table("EmployeePayHrsHistory", Schema = "dbo")]
    public class EmployeePayHrsHistory
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ID", Order = 1, TypeName = "int")]
        [Index(@"PK__Employee__3214EC276AEFE058", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; }

        [Column(@"EmployeeNumber", Order = 2, TypeName = "decimal")]
        [Required]
        [Display(Name = "Employee number")]
        public decimal EmployeeNumber { get; set; }

        [Column(@"PayDate", Order = 3, TypeName = "date")]
        [Required]
        [Display(Name = "Pay date")]
        public System.DateTime PayDate { get; set; }

        [Column(@"CheckTypeCVD", Order = 4, TypeName = "char")]
        [Required]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Check type cvd")]
        public string CheckTypeCvd { get; set; }

        [Column(@"PaySequence", Order = 5, TypeName = "decimal")]
        [Required]
        [Display(Name = "Pay sequence")]
        public decimal PaySequence { get; set; }

        [Column(@"PayPeriodEndingDate", Order = 6, TypeName = "date")]
        [Display(Name = "Pay period ending date")]
        public System.DateTime? PayPeriodEndingDate { get; set; }

        [Column(@"Check", Order = 7, TypeName = "decimal")]
        [Display(Name = "Check")]
        public decimal? Check { get; set; }

        [Column(@"DirectDepositStatus", Order = 8, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Direct deposit status")]
        public string DirectDepositStatus { get; set; }

        [Column(@"RegularHrs", Order = 9, TypeName = "decimal")]
        [Display(Name = "Regular hrs")]
        public decimal? RegularHrs { get; set; }

        [Column(@"RegularPay", Order = 10, TypeName = "decimal")]
        [Display(Name = "Regular pay")]
        public decimal? RegularPay { get; set; }

        [Column(@"OvertimeHrs", Order = 11, TypeName = "decimal")]
        [Display(Name = "Overtime hrs")]
        public decimal? OvertimeHrs { get; set; }

        [Column(@"OvertimePay", Order = 12, TypeName = "decimal")]
        [Display(Name = "Overtime pay")]
        public decimal? OvertimePay { get; set; }

        [Column(@"SalaryHrs", Order = 13, TypeName = "decimal")]
        [Display(Name = "Salary hrs")]
        public decimal? SalaryHrs { get; set; }

        [Column(@"SalaryPay", Order = 14, TypeName = "decimal")]
        [Display(Name = "Salary pay")]
        public decimal? SalaryPay { get; set; }

        [Column(@"HolidayHrs", Order = 15, TypeName = "decimal")]
        [Display(Name = "Holiday hrs")]
        public decimal? HolidayHrs { get; set; }

        [Column(@"HolidayPay", Order = 16, TypeName = "decimal")]
        [Display(Name = "Holiday pay")]
        public decimal? HolidayPay { get; set; }

        [Column(@"HolidayHrsBankedUsed", Order = 17, TypeName = "decimal")]
        [Display(Name = "Holiday hrs banked used")]
        public decimal? HolidayHrsBankedUsed { get; set; }

        [Column(@"HolidayHrsBankedPay", Order = 18, TypeName = "decimal")]
        [Display(Name = "Holiday hrs banked pay")]
        public decimal? HolidayHrsBankedPay { get; set; }

        [Column(@"FloatingHolidayHrsUsed", Order = 19, TypeName = "decimal")]
        [Display(Name = "Floating holiday hrs used")]
        public decimal? FloatingHolidayHrsUsed { get; set; }

        [Column(@"FloatingHolidayPay", Order = 20, TypeName = "decimal")]
        [Display(Name = "Floating holiday pay")]
        public decimal? FloatingHolidayPay { get; set; }

        [Column(@"VacationHrsUsed", Order = 21, TypeName = "decimal")]
        [Display(Name = "Vacation hrs used")]
        public decimal? VacationHrsUsed { get; set; }

        [Column(@"VacationHrsAdded", Order = 22, TypeName = "decimal")]
        [Display(Name = "Vacation hrs added")]
        public decimal? VacationHrsAdded { get; set; }

        [Column(@"VacationHrsUsedPrior", Order = 23, TypeName = "decimal")]
        [Display(Name = "Vacation hrs used prior")]
        public decimal? VacationHrsUsedPrior { get; set; }

        [Column(@"VacationHrsUseLseUsed", Order = 24, TypeName = "decimal")]
        [Display(Name = "Vacation hrs use lse used")]
        public decimal? VacationHrsUseLseUsed { get; set; }

        [Column(@"SickHrsUsed", Order = 25, TypeName = "decimal")]
        [Display(Name = "Sick hrs used")]
        public decimal? SickHrsUsed { get; set; }

        [Column(@"SickHrsAdded", Order = 26, TypeName = "decimal")]
        [Display(Name = "Sick hrs added")]
        public decimal? SickHrsAdded { get; set; }

        [Column(@"CompHrsUsed", Order = 27, TypeName = "decimal")]
        [Display(Name = "Comp hrs used")]
        public decimal? CompHrsUsed { get; set; }

        [Column(@"CompHrsAdded", Order = 28, TypeName = "decimal")]
        [Display(Name = "Comp hrs added")]
        public decimal? CompHrsAdded { get; set; }

        [Column(@"SaifHoursWorked", Order = 29, TypeName = "decimal")]
        [Display(Name = "Saif hours worked")]
        public decimal? SaifHoursWorked { get; set; }

        [Column(@"WeeksWorked", Order = 30, TypeName = "decimal")]
        [Display(Name = "Weeks worked")]
        public decimal? WeeksWorked { get; set; }

        [Column(@"GrossPay", Order = 31, TypeName = "decimal")]
        [Display(Name = "Gross pay")]
        public decimal? GrossPay { get; set; }

        [Column(@"GrossSubjWorkersComp", Order = 32, TypeName = "decimal")]
        [Display(Name = "Gross subj workers comp")]
        public decimal? GrossSubjWorkersComp { get; set; }

        [Column(@"GrossSubjSuta", Order = 33, TypeName = "decimal")]
        [Display(Name = "Gross subj suta")]
        public decimal? GrossSubjSuta { get; set; }

        [Column(@"NetPayCheck", Order = 34, TypeName = "decimal")]
        [Display(Name = "Net pay check")]
        public decimal? NetPayCheck { get; set; }

        [Column(@"FedTaxPaid", Order = 35, TypeName = "decimal")]
        [Display(Name = "Fed tax paid")]
        public decimal? FedTaxPaid { get; set; }

        [Column(@"StateTaxPaid", Order = 36, TypeName = "decimal")]
        [Display(Name = "State tax paid")]
        public decimal? StateTaxPaid { get; set; }

        [Column(@"FicaTaxPaid", Order = 37, TypeName = "decimal")]
        [Display(Name = "Fica tax paid")]
        public decimal? FicaTaxPaid { get; set; }

        [Column(@"FicmTaxPaid", Order = 38, TypeName = "decimal")]
        [Display(Name = "Ficm tax paid")]
        public decimal? FicmTaxPaid { get; set; }

        [Column(@"GrossNotSubjStateFed", Order = 39, TypeName = "decimal")]
        [Display(Name = "Gross not subj state fed")]
        public decimal? GrossNotSubjStateFed { get; set; }

        [Column(@"GrossNoStateFedFica", Order = 40, TypeName = "decimal")]
        [Display(Name = "Gross no state fed fica")]
        public decimal? GrossNoStateFedFica { get; set; }

        [Column(@"DeferredCompPaid", Order = 41, TypeName = "decimal")]
        [Display(Name = "Deferred comp paid")]
        public decimal? DeferredCompPaid { get; set; }

        [Column(@"FringeGross", Order = 42, TypeName = "decimal")]
        [Display(Name = "Fringe gross")]
        public decimal? FringeGross { get; set; }

        [Column(@"FringeGrossFicaOnly", Order = 43, TypeName = "decimal")]
        [Display(Name = "Fringe gross fica only")]
        public decimal? FringeGrossFicaOnly { get; set; }
    }

}
// </auto-generated>
