// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace HarneyCounty.Domain.Core.Models
{

    [Table("TaxLienholder", Schema = "dbo")]
    public class TaxLienholder
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; }

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"AcctNmbr", Order = 2, TypeName = "char")]
        [Required]
        [MaxLength(9)]
        [StringLength(9)]
        [Key]
        [Display(Name = "Acct nmbr")]
        public string AcctNmbr { get; set; }

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"Sequence", Order = 3, TypeName = "decimal")]
        [Required]
        [Key]
        [Display(Name = "Sequence")]
        public decimal Sequence { get; set; }

        [Column(@"OwnerName", Order = 4, TypeName = "char")]
        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "Owner name")]
        public string OwnerName { get; set; }

        [Column(@"CareOfFlag", Order = 5, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Care of flag")]
        public string CareOfFlag { get; set; }

        [Column(@"CareOfName", Order = 6, TypeName = "char")]
        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "Care of name")]
        public string CareOfName { get; set; }

        [Column(@"OwnerAdrsLine2", Order = 7, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Owner adrs line 2")]
        public string OwnerAdrsLine2 { get; set; }

        [Column(@"OwnerAdrsLine3", Order = 8, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Owner adrs line 3")]
        public string OwnerAdrsLine3 { get; set; }

        [Column(@"LienholderInstrument", Order = 9, TypeName = "char")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Lienholder instrument")]
        public string LienholderInstrument { get; set; }

        [Column(@"LienholderComment", Order = 10, TypeName = "char")]
        [MaxLength(60)]
        [StringLength(60)]
        [Display(Name = "Lienholder comment")]
        public string LienholderComment { get; set; }

        [Column(@"ZipCode", Order = 11, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Zip code")]
        public string ZipCode { get; set; }
    }

}
// </auto-generated>
