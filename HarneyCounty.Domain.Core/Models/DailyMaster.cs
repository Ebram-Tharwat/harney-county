// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace HarneyCounty.Domain.Core.Models
{

    [Table("DailyMaster", Schema = "dbo")]
    public class DailyMaster
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_DailyMaster", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; }

        [Column(@"AuditTurnoverSequenceId", Order = 2, TypeName = "int")]
        [Required]
        [Display(Name = "Audit turnover sequence ID")]
        public int AuditTurnoverSequenceId { get; set; }

        [Column(@"EntryDate", Order = 3, TypeName = "date")]
        [Required]
        [Display(Name = "Entry date")]
        [DataType(DataType.Date)]
        public System.DateTime EntryDate { get; set; }

        [Column(@"FromDate", Order = 4, TypeName = "date")]
        [Display(Name = "From date")]
        public System.DateTime? FromDate { get; set; }

        [Column(@"ThruDate", Order = 5, TypeName = "date")]
        [Display(Name = "Thru date")]
        public System.DateTime? ThruDate { get; set; }

        [Column(@"FromReceipt", Order = 6, TypeName = "int")]
        [Required]
        [Display(Name = "From receipt")]
        public int FromReceipt { get; set; }

        [Column(@"ThruReceipt", Order = 7, TypeName = "int")]
        [Required]
        [Display(Name = "Thru receipt")]
        public int ThruReceipt { get; set; }

        [Column(@"CheckDollars", Order = 8, TypeName = "decimal")]
        [Display(Name = "Check dollars")]
        public decimal? CheckDollars { get; set; }

        [Column(@"CurrencyDollars", Order = 9, TypeName = "decimal")]
        [Display(Name = "Currency dollars")]
        public decimal? CurrencyDollars { get; set; }

        [Column(@"CoinDollars", Order = 10, TypeName = "decimal")]
        [Display(Name = "Coin dollars")]
        public decimal? CoinDollars { get; set; }

        [Column(@"CashDrawerDollars", Order = 11, TypeName = "decimal")]
        [Display(Name = "Cash drawer dollars")]
        public decimal? CashDrawerDollars { get; set; }

        [Column(@"RefundDollars", Order = 12, TypeName = "decimal")]
        [Display(Name = "Refund dollars")]
        public decimal? RefundDollars { get; set; }

        [Column(@"TotalDollars", Order = 13, TypeName = "decimal")]
        [Display(Name = "Total dollars")]
        public decimal? TotalDollars { get; set; }

        [Column(@"IsActive", Order = 14, TypeName = "bit")]
        [Display(Name = "Is active")]
        public bool? IsActive { get; set; }

        public virtual System.Collections.Generic.ICollection<AuditDailyDetail> AuditDailyDetails { get; set; }

        [ForeignKey("AuditTurnoverSequenceId")] public virtual AuditTurnoverSequence AuditTurnoverSequence { get; set; }

        public DailyMaster()
        {
            AuditDailyDetails = new System.Collections.Generic.List<AuditDailyDetail>();
        }
    }

}
// </auto-generated>
