// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace HarneyCounty.Domain.Core.Models
{

    [Table("FlaggingMaster", Schema = "dbo")]
    public class FlaggingMaster
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ID", Order = 1, TypeName = "int")]
        [Index(@"PK__Flagging__3214EC273A4CA8FD", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; }

        [Column(@"FlaggingCode", Order = 2, TypeName = "char")]
        [Required]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Flagging code")]
        public string FlaggingCode { get; set; }

        [Column(@"FlagDescription", Order = 3, TypeName = "char")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Flag description")]
        public string FlagDescription { get; set; }

        [Column(@"TaxStmtMessage", Order = 4, TypeName = "char")]
        [MaxLength(45)]
        [StringLength(45)]
        [Display(Name = "Tax stmt message")]
        public string TaxStmtMessage { get; set; }

        [Column(@"TaxCollScreenMessage", Order = 5, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Tax coll screen message")]
        public string TaxCollScreenMessage { get; set; }

        [Column(@"AssessRollMessage", Order = 6, TypeName = "char")]
        [MaxLength(45)]
        [StringLength(45)]
        [Display(Name = "Assess roll message")]
        public string AssessRollMessage { get; set; }

        [Column(@"PermTempFlag", Order = 7, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Perm temp flag")]
        public string PermTempFlag { get; set; }

        [Column(@"MessageOnAccount", Order = 8, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Message on account")]
        public string MessageOnAccount { get; set; }

        [Column(@"FollowSegsConsStatus", Order = 9, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Follow segs cons status")]
        public string FollowSegsConsStatus { get; set; }

        [Column(@"ExceptionFlagStatus", Order = 10, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Exception flag status")]
        public string ExceptionFlagStatus { get; set; }

        [Column(@"IfExceptionType", Order = 11, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "If exception type")]
        public string IfExceptionType { get; set; }

        [Column(@"IfExceptionRatio", Order = 12, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "If exception ratio")]
        public string IfExceptionRatio { get; set; }

        [Column(@"IfExceptionTypeGroup", Order = 13, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "If exception type group")]
        public string IfExceptionTypeGroup { get; set; }

        [Column(@"MinorConstStatus", Order = 14, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Minor const status")]
        public string MinorConstStatus { get; set; }

        [Column(@"OnTaxCollectionScreen", Order = 15, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "On tax collection screen")]
        public string OnTaxCollectionScreen { get; set; }

        [Column(@"CountyNumber", Order = 16, TypeName = "numeric")]
        [Display(Name = "County number")]
        public decimal? CountyNumber { get; set; }
    }

}
// </auto-generated>
