// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace HarneyCounty.Domain.Core.Models
{

    [Table("PropertyClass", Schema = "dbo")]
    public class PropertyClass
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ID", Order = 1, TypeName = "int")]
        [Index(@"PK__Property__3214EC2724927208", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; }

        [Column(@"AsmtYear", Order = 2, TypeName = "decimal")]
        [Required]
        [Display(Name = "Asmt year")]
        public decimal AsmtYear { get; set; }

        [Column(@"PropertyClass", Order = 3, TypeName = "char")]
        [Required]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Property class")]
        public string PropertyClass_ { get; set; }

        [Column(@"PropertyClassDescription", Order = 4, TypeName = "char")]
        [Required]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Property class description")]
        public string PropertyClassDescription { get; set; }

        [Column(@"ExemtFlag", Order = 5, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Exemt flag")]
        public string ExemtFlag { get; set; }

        [Column(@"SpecAssdFlag", Order = 6, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Spec assd flag")]
        public string SpecAssdFlag { get; set; }

        [Column(@"ImprovementFlag", Order = 7, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Improvement flag")]
        public string ImprovementFlag { get; set; }

        [Column(@"PotentialLiabilityMsg", Order = 8, TypeName = "char")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Potential liability msg")]
        public string PotentialLiabilityMsg { get; set; }

        [Column(@"HistoricPropertyStatus", Order = 9, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Historic property status")]
        public string HistoricPropertyStatus { get; set; }

        [Column(@"ChangedPropertyGrouper", Order = 10, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Changed property grouper")]
        public string ChangedPropertyGrouper { get; set; }

        [Column(@"PropertyClassGrouping", Order = 11, TypeName = "char")]
        [Required]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Property class grouping")]
        public string PropertyClassGrouping { get; set; }

        [Column(@"PropertyClassSalesPrint", Order = 12, TypeName = "char")]
        [Required]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Property class sales print")]
        public string PropertyClassSalesPrint { get; set; }

        [Column(@"CountyNumber", Order = 13, TypeName = "decimal")]
        [Display(Name = "County number")]
        public decimal? CountyNumber { get; set; }
    }

}
// </auto-generated>
