// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace HarneyCounty.Domain.Core.Models
{

    [Table("DeductionHistory", Schema = "dbo")]
    public class DeductionHistory
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ID", Order = 1, TypeName = "int")]
        [Index(@"PK__Deductio__3214EC275BAD9CC8", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; }

        [Column(@"EmployeeNumber", Order = 2, TypeName = "decimal")]
        [Required]
        [Display(Name = "Employee number")]
        public decimal EmployeeNumber { get; set; }

        [Column(@"PayDate", Order = 3, TypeName = "date")]
        [Required]
        [Display(Name = "Pay date")]
        public System.DateTime PayDate { get; set; }

        [Column(@"PaySequence", Order = 4, TypeName = "decimal")]
        [Required]
        [Display(Name = "Pay sequence")]
        public decimal PaySequence { get; set; }

        [Column(@"DeductionCode", Order = 5, TypeName = "char")]
        [Required]
        [MaxLength(6)]
        [StringLength(6)]
        [Display(Name = "Deduction code")]
        public string DeductionCode { get; set; }

        [Column(@"Fund", Order = 6, TypeName = "decimal")]
        [Required]
        [Display(Name = "Fund")]
        public decimal Fund { get; set; }

        [Column(@"Department", Order = 7, TypeName = "decimal")]
        [Required]
        [Display(Name = "Department")]
        public decimal Department { get; set; }

        [Column(@"DeductionSeq", Order = 8, TypeName = "numeric")]
        [Required]
        [Display(Name = "Deduction seq")]
        public decimal DeductionSeq { get; set; }

        [Column(@"PayPeriodEndingDate", Order = 9, TypeName = "date")]
        [Display(Name = "Pay period ending date")]
        public System.DateTime? PayPeriodEndingDate { get; set; }

        [Column(@"Check", Order = 10, TypeName = "decimal")]
        [Display(Name = "Check")]
        public decimal? Check { get; set; }

        [Column(@"CheckType", Order = 11, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Check type")]
        public string CheckType { get; set; }

        [Column(@"EmployeeAmt", Order = 12, TypeName = "decimal")]
        [Display(Name = "Employee amt")]
        public decimal? EmployeeAmt { get; set; }

        [Column(@"EmployerAmt", Order = 13, TypeName = "decimal")]
        [Display(Name = "Employer amt")]
        public decimal? EmployerAmt { get; set; }

        [Column(@"EmployeeAmtPickedUp", Order = 14, TypeName = "decimal")]
        [Display(Name = "Employee amt picked up")]
        public decimal? EmployeeAmtPickedUp { get; set; }

        [Column(@"Percent76", Order = 15, TypeName = "decimal")]
        [Display(Name = "Percent 76")]
        public decimal? Percent76 { get; set; }

        [Column(@"GrossPay", Order = 16, TypeName = "decimal")]
        [Display(Name = "Gross pay")]
        public decimal? GrossPay { get; set; }

        [Column(@"ExcessOvertime", Order = 17, TypeName = "decimal")]
        [Display(Name = "Excess overtime")]
        public decimal? ExcessOvertime { get; set; }

        [Column(@"VacationGrossWage", Order = 18, TypeName = "decimal")]
        [Display(Name = "Vacation gross wage")]
        public decimal? VacationGrossWage { get; set; }

        [Column(@"SaifHoursWorked", Order = 19, TypeName = "decimal")]
        [Display(Name = "Saif hours worked")]
        public decimal? SaifHoursWorked { get; set; }

        [Column(@"DeductSts", Order = 20, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Deduct sts")]
        public string DeductSts { get; set; }

        [Column(@"DirectDepositStatus", Order = 21, TypeName = "char")]
        [MaxLength(1)]
        [StringLength(1)]
        [Display(Name = "Direct deposit status")]
        public string DirectDepositStatus { get; set; }

        [Column(@"SaifYear", Order = 22, TypeName = "decimal")]
        [Display(Name = "Saif year")]
        public decimal? SaifYear { get; set; }

        [Column(@"SaifCode", Order = 23, TypeName = "char")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Saif code")]
        public string SaifCode { get; set; }
    }

}
// </auto-generated>
